# Compare different ways to construct binary trees with parent pointers

query {
  gptree(x2,x3,x1) |= leafTree(x1,x2,x3)
}
sid {
  # construct a binary tree with parent pointers starting at the leftmost leaf.
  # x1 = leftmost leaf
  # x2 = root
  # x3 = parent of root
  leafTree <= x1 -> (nil,nil,p) * rtree(p,x1,x2,x3);
  rtree <= x1 -> (x2, r, p) * treep(r,x1) * rtree(p,x1,x3,x4);
  rtree <= x1 -> (x2, r, x3) * treep(r,x1) * rroot(x3,x1,x4);
  rroot <= x1 -> (x2,r,x3) * treep(r,x1);
  #
  # standard construction of a binary tree with parent pointers in which we additionally
  # keep track of the leftmost leaf
  # x1 = root
  # x2 = parent 
  # x3 = leftmost leaf
  gptree <= x1 -> (l,r,x2) * ptree(l,x1,x3) * treep(r,x1);
  ptree <= x1 -> (x3,r,x2) * parent(x3,x1) * treep(r,x1);
  ptree <= x1 -> (l,r,x2) * ptree(l,x1,x3) * treep(r,x1);
  # auxiliaries
  treep <= x1 -> (nil, nil, x2) ;
  treep <= x1 -> (y, z, x2) * treep(y, x1) * treep(z, x1) ;
  parent <= x1 -> (nil,nil,x2);
}
info {
  status = true
}
